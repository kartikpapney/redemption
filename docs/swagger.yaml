definitions:
  models.PreferredUnit:
    properties:
      height:
        type: string
      weight:
        type: string
    type: object
  requestModel.CreateExerciseRequest:
    properties:
      name:
        type: string
      other:
        items:
          type: string
        type: array
      primary:
        items:
          type: string
        type: array
      secondary:
        items:
          type: string
        type: array
    type: object
  requestModel.CreateProductRequest:
    properties:
      manufacturer:
        type: string
      name:
        type: string
    type: object
  requestModel.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  requestModel.PaginatedRequest:
    properties:
      limit:
        type: integer
      page:
        type: integer
    type: object
  requestModel.RefreshRequest:
    properties:
      token:
        type: string
    type: object
  requestModel.RegisterRequest:
    properties:
      email:
        type: string
      location:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  requestModel.UpdateExerciseRequest:
    properties:
      name:
        type: string
      other:
        items:
          type: string
        type: array
      primary:
        items:
          type: string
        type: array
      secondary:
        items:
          type: string
        type: array
    type: object
  requestModel.UserUpdateRequest:
    properties:
      dob:
        type: string
      location:
        type: string
      preferred_exercise:
        type: string
      preferred_unit:
        $ref: '#/definitions/models.PreferredUnit'
    type: object
  requestModel.VerifyRequest:
    properties:
      token:
        type: string
    required:
    - token
    type: object
  responseModel.PaginatedResponse:
    properties:
      data:
        additionalProperties: {}
        type: object
      limit:
        type: integer
      message:
        type: string
      page:
        type: integer
      success:
        type: boolean
      total:
        type: integer
    type: object
  responseModel.Response:
    properties:
      data:
        additionalProperties: {}
        type: object
      message:
        type: string
      success:
        type: boolean
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: login a user
      parameters:
      - description: Login Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.Response'
      summary: Login
      tags:
      - auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      description: refreshes a user token
      parameters:
      - description: Refresh Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.Response'
      summary: Refresh
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: verifies user email
      parameters:
      - description: Verify Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.VerifyRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.Response'
      summary: Verify
      tags:
      - auth
  /equipment:
    delete:
      consumes:
      - application/json
      description: get all equipment
      parameters:
      - description: Get All Equipment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Equipment
      tags:
      - equipment
    get:
      consumes:
      - application/json
      description: get all equipment
      parameters:
      - description: Get All Equipment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Equipment
      tags:
      - equipment
    post:
      consumes:
      - application/json
      description: get all equipment
      parameters:
      - description: Get All Equipment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Equipment
      tags:
      - equipment
    put:
      consumes:
      - application/json
      description: get all equipment
      parameters:
      - description: Get All Equipment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Equipment
      tags:
      - equipment
  /exercise:
    get:
      consumes:
      - application/json
      description: get all exercise
      parameters:
      - description: Get All Exercise Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Exercise
      tags:
      - exercise
    post:
      consumes:
      - application/json
      description: create exercise
      parameters:
      - description: Create Exercise Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.CreateExerciseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.Response'
      security:
      - ApiKeyAuth: []
      summary: Create Exercise
      tags:
      - exercise
  /exercise/{id}:
    delete:
      consumes:
      - application/json
      description: Delete exercise request
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete Exercise Request
      tags:
      - exercise
    get:
      consumes:
      - application/json
      description: get exercise
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.Response'
      security:
      - ApiKeyAuth: []
      summary: Get Exercise
      tags:
      - exercise
    put:
      consumes:
      - application/json
      description: update exercise
      parameters:
      - description: Exercise ID
        in: path
        name: id
        required: true
        type: string
      - description: Update Exercise Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.UpdateExerciseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.Response'
      security:
      - ApiKeyAuth: []
      summary: Update Exercise
      tags:
      - exercise
  /ping:
    get:
      consumes:
      - application/json
      description: check server
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
      summary: Ping
      tags:
      - ping
  /product:
    delete:
      consumes:
      - application/json
      description: deletes all product of user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete All Products
      tags:
      - product
    get:
      consumes:
      - application/json
      description: creates a new note
      parameters:
      - description: Get All Products Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Products
      tags:
      - product
    post:
      consumes:
      - application/json
      description: creates a new product
      parameters:
      - description: Create Product Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.CreateProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.Response'
      security:
      - ApiKeyAuth: []
      summary: Create Product
      tags:
      - product
  /tag:
    delete:
      consumes:
      - application/json
      description: get all equipment
      parameters:
      - description: Get All Equipment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Equipment
      tags:
      - tag
    get:
      consumes:
      - application/json
      description: get all tag
      parameters:
      - description: Get All Tag Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Tag
      tags:
      - tag
    post:
      consumes:
      - application/json
      description: create a tag
      parameters:
      - description: Create Tag Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Create A Tag
      tags:
      - tag
    put:
      consumes:
      - application/json
      description: get all equipment
      parameters:
      - description: Get All Equipment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Equipment
      tags:
      - tag
  /user:
    get:
      consumes:
      - application/json
      description: get logged in user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.Response'
      security:
      - ApiKeyAuth: []
      summary: Get Logged In User
      tags:
      - user
    put:
      consumes:
      - application/json
      description: update logged in user
      parameters:
      - description: Update User Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.UserUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.Response'
      security:
      - ApiKeyAuth: []
      summary: Update Logged In User
      tags:
      - user
  /workout:
    delete:
      consumes:
      - application/json
      description: get all equipment
      parameters:
      - description: Get All Equipment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Equipment
      tags:
      - workout
    get:
      consumes:
      - application/json
      description: get all equipment
      parameters:
      - description: Get All Equipment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Equipment
      tags:
      - workout
    post:
      consumes:
      - application/json
      description: get all equipment
      parameters:
      - description: Get All Equipment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Equipment
      tags:
      - workout
    put:
      consumes:
      - application/json
      description: get all equipment
      parameters:
      - description: Get All Equipment Request
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/requestModel.PaginatedRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responseModel.PaginatedResponse'
      security:
      - ApiKeyAuth: []
      summary: Get All Equipment
      tags:
      - workout
swagger: "2.0"
